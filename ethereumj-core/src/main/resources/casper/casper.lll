[seq,
  [mstore, 28, [calldataload, 0]],
  [mstore, 32, 1461501637330902918203684832716283019655932542976],
  [mstore, 64, 170141183460469231731687303715884105727],
  [mstore, 96, -170141183460469231731687303715884105728],
  [mstore, 128, 1701411834604692317316873037158841057270000000000],
  [mstore, 160, -1701411834604692317316873037158841057280000000000],
  # Line 116
  [codecopy, 320, ~codelen, 256],
  [assert, [iszero, callvalue]],
  /* checking num input */
  [clamp,
    [mload, 96],
    [codeload, ~codelen],
    [mload, 64]],
  /* checking num input */
  [clamp,
    [mload, 96],
    [codeload, [add, ~codelen, 32]],
    [mload, 64]],
  /* checking address input */
  [uclamplt,
    [codeload, [add, ~codelen, 64]],
    [mload, 32]],
  /* checking address input */
  [uclamplt,
    [codeload, [add, ~codelen, 96]],
    [mload, 32]],
  /* checking address input */
  [uclamplt,
    [codeload, [add, ~codelen, 128]],
    [mload, 32]],
  /* checking num input */
  [clamp,
    [mload, 96],
    [codeload, [add, ~codelen, 224]],
    [mload, 64]],
  # Line 126
  [sstore, 16 <self.epoch_length>, [mload, 320 <_epoch_length>]],
  # Line 128
  [sstore, 17 <self.withdrawal_delay>, [mload, 352 <_withdrawal_delay>]],
  # Line 130
  [sstore, 2 <self.nextValidatorIndex>, 1],
  # Line 132
  [sstore, 22 <self.owner>, [mload, 384 <_owner>]],
  # Line 134
  [sstore, [sha3_32, 13 <self.deposit_scale_factor>], 100000000000000000000],
  # Line 136
  [sstore, 4 <self.dynasty>, 0],
  # Line 138
  [sstore,
    18 <self.current_epoch>,
    [clamp,
      [mload, 96],
      [sdiv, number, [clamp_nonzero, [sload, 16 <self.epoch_length>]]],
      [mload, 64]]],
  # Line 140
  [sstore, 24 <self.sighasher>, [mload, 416 <_sighasher>]],
  # Line 142
  [sstore, 25 <self.purity_checker>, [mload, 448 <_purity_checker>]],
  # Line 145
  [sstore, 7 <self.total_curdyn_deposits>, 0],
  # Line 146
  [sstore, 8 <self.total_prevdyn_deposits>, 0],
  # Line 148
  [sstore, 27 <self.base_interest_factor>, [mload, 480 <_base_interest_factor>]],
  # Line 149
  [sstore, 28 <self.base_penalty_factor>, [mload, 512 <_base_penalty_factor>]],
  # Line 150
  [sstore,
    29 <self.vote_log_topic>,
    44854244691294150128543874285586038746497872340133682954055806415933027209151],
  # Line 152
  [sstore, 30 <self.min_deposit_size>, [mload, 544 <_min_deposit_size>]],
  [return,
    0,
    [lll,
      [seq,
        [mstore, 28, [calldataload, 0]],
        [mstore, 32, 1461501637330902918203684832716283019655932542976],
        [mstore, 64, 170141183460469231731687303715884105727],
        [mstore, 96, -170141183460469231731687303715884105728],
        [mstore, 128, 1701411834604692317316873037158841057270000000000],
        [mstore, 160, -1701411834604692317316873037158841057280000000000],
        # Line 155
        [if,
          [eq, [mload, 0], 2484158328 <get_main_hash_voted_frac>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 158
            [mstore,
              0,
              [with,
                _l,
                [clamp,
                  [mload, 160],
                  [with,
                    l,
                    [sload,
                      [add,
                        [sha3_32, [sha3_32, [add, [sha3_32, 11 <self.votes>], [sload, 18 <self.current_epoch>]]]],
                        [sload, 21 <self.expected_source_epoch>]]],
                    [with,
                      r,
                      [clamp_nonzero, [sload, 7 <self.total_curdyn_deposits>]],
                      [sdiv, [mul, l, 10000000000], r]]],
                  [mload, 128]],
                [with,
                  _r,
                  [clamp,
                    [mload, 160],
                    [with,
                      l,
                      [sload,
                        [add,
                          [sha3_32,
                            [add,
                              [sha3_32, [add, [sha3_32, 11 <self.votes>], [sload, 18 <self.current_epoch>]]],
                              3 <prev_dyn_votes>]],
                          [sload, 21 <self.expected_source_epoch>]]],
                      [with,
                        r,
                        [clamp_nonzero, [sload, 8 <self.total_prevdyn_deposits>]],
                        [sdiv, [mul, l, 10000000000], r]]],
                    [mload, 128]],
                  [if, [sgt, _l, _r], _r, _l]]]],
            [return, 0, 32],
            # Line 155
            stop]],
        # Line 161
        [if,
          [eq, [mload, 0], 2218461328 <get_deposit_size>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 164
            [mstore,
              0,
              [sdiv,
                [clamp,
                  [mload, 160],
                  [with,
                    r,
                    [sload,
                      [add,
                        [sha3_32, 13 <self.deposit_scale_factor>],
                        [sload, 18 <self.current_epoch>]]],
                    [with,
                      l,
                      [sload,
                        [add,
                          [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                          1 <deposit>]],
                      [with,
                        ans,
                        [mul, l, r],
                        [seq,
                          [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                          [sdiv, ans, 10000000000]]]]],
                  [mload, 128]],
                10000000000]],
            [return, 0, 32],
            # Line 161
            stop]],
        # Line 166
        [if,
          [eq, [mload, 0], 998321859 <get_total_curdyn_deposits>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 169
            [mstore,
              0,
              [sdiv,
                [clamp,
                  [mload, 160],
                  [with,
                    r,
                    [sload,
                      [add,
                        [sha3_32, 13 <self.deposit_scale_factor>],
                        [sload, 18 <self.current_epoch>]]],
                    [with,
                      l,
                      [sload, 7 <self.total_curdyn_deposits>],
                      [with,
                        ans,
                        [mul, l, r],
                        [seq,
                          [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                          [sdiv, ans, 10000000000]]]]],
                  [mload, 128]],
                10000000000]],
            [return, 0, 32],
            # Line 166
            stop]],
        # Line 171
        [if,
          [eq, [mload, 0], 1738402402 <get_total_prevdyn_deposits>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 174
            [mstore,
              0,
              [sdiv,
                [clamp,
                  [mload, 160],
                  [with,
                    r,
                    [sload,
                      [add,
                        [sha3_32, 13 <self.deposit_scale_factor>],
                        [sload, 18 <self.current_epoch>]]],
                    [with,
                      l,
                      [sload, 8 <self.total_prevdyn_deposits>],
                      [with,
                        ans,
                        [mul, l, r],
                        [seq,
                          [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                          [sdiv, ans, 10000000000]]]]],
                  [mload, 128]],
                10000000000]],
            [return, 0, 32],
            # Line 171
            stop]],
        # Line 177
        [if,
          [eq, [mload, 0], 2997763920 <get_recommended_source_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 180
            [mstore, 0, [sload, 21 <self.expected_source_epoch>]],
            [return, 0, 32],
            # Line 177
            stop]],
        # Line 182
        [if,
          [eq, [mload, 0], 3403399105 <get_recommended_target_hash>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 185
            [mstore,
              0,
              [blockhash,
                [uclamplt,
                  [clampge,
                    [clamp,
                      [mload, 96],
                      [sub,
                        [clamp,
                          [mload, 96],
                          [mul, [sload, 18 <self.current_epoch>], [sload, 16 <self.epoch_length>]],
                          [mload, 64]],
                        1],
                      [mload, 64]],
                    [sub, number, 256]],
                  number]]],
            [return, 0, 32],
            # Line 182
            stop]],
        # Line 187
        [if,
          [eq, [mload, 0], 3732904309 <deposit_exists>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            # Line 190
            [mstore,
              0,
              [and,
                [sgt, [sload, 7 <self.total_curdyn_deposits>], 0],
                [sgt, [sload, 8 <self.total_prevdyn_deposits>], 0]]],
            [return, 0, 32],
            # Line 187
            stop]],
        # Line 196
        [if,
          [eq, [mload, 0], 3532045186 <increment_dynasty>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            # Line 198
            [mstore, 320 <epoch>, [sload, 18 <self.current_epoch>]],
            # Line 200
            [if,
              [sload,
                [add,
                  [sha3_32,
                    [add,
                      [sha3_32, 11 <self.votes>],
                      [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 2], [mload, 64]]]],
                  1 <is_finalized>]],
              # Line 201
              [seq,
                [with,
                  _stloc,
                  4 <self.dynasty>,
                  [sstore, _stloc, [clamp, [mload, 96], [add, [sload, _stloc], 1], [mload, 64]]]],
                # Line 202
                [sstore,
                  8 <self.total_prevdyn_deposits>,
                  [sload, 7 <self.total_curdyn_deposits>]],
                # Line 203
                [with,
                  _stloc,
                  7 <self.total_curdyn_deposits>,
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [add, [sload, _stloc], [sload, 5 <self.next_dynasty_wei_delta>]],
                      [mload, 128]]]],
                # Line 204
                [sstore,
                  5 <self.next_dynasty_wei_delta>,
                  [sload, 6 <self.second_next_dynasty_wei_delta>]],
                # Line 205
                [sstore, 6 <self.second_next_dynasty_wei_delta>, 0],
                # Line 206
                [sstore,
                  [add, [sha3_32, 9 <self.dynasty_start_epoch>], [sload, 4 <self.dynasty>]],
                  [mload, 320 <epoch>]]]],
            # Line 207
            [sstore,
              [add, [sha3_32, 10 <self.dynasty_in_epoch>], [mload, 320 <epoch>]],
              [sload, 4 <self.dynasty>]],
            # Line 208
            [if,
              [sload, 12 <self.main_hash_justified>],
              # Line 209
              [seq,
                [sstore,
                  21 <self.expected_source_epoch>,
                  [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]]],
            # Line 210
            [sstore, 12 <self.main_hash_justified>, 0],
            # Line 196
            stop]],
        # Line 213
        [if,
          [eq, [mload, 0], 4200925994 <get_esf>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            # Line 215
            [mstore, 320 <epoch>, [sload, 18 <self.current_epoch>]],
            # Line 216
            [mstore,
              0,
              [clamp,
                [mload, 96],
                [sub, [mload, 320 <epoch>], [sload, 19 <self.last_finalized_epoch>]],
                [mload, 64]]],
            [return, 0, 32],
            # Line 213
            stop]],
        # Line 219
        [if,
          [eq, [mload, 0], 1890537662 <get_collective_reward>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            # Line 221
            [mstore, 320 <epoch>, [sload, 18 <self.current_epoch>]],
            # Line 222
            [mstore,
              480 <live>,
              [sle,
                [mload,
                  /* Internal Call: get_esf */
                  [seq,
                    [assert, [call, gas, address, 0, [seq, [mstore, 352, 4200925994], 380], 4, 448, 32]],
                    448]],
                2]],
            # Line 223
            [if,
              [or,
                [iszero,
                  [mload,
                    /* Internal Call: deposit_exists */
                    [seq,
                      [assert, [call, gas, address, 0, [seq, [mstore, 512, 3732904309], 540], 4, 608, 32]],
                      608]]],
                [iszero, [mload, 480 <live>]]],
              # Line 224
              [seq, [mstore, 0, 0], [return, 0, 32]]],
            # Line 226
            [mstore,
              640 <cur_vote_frac>,
              [clamp,
                [mload, 160],
                [with,
                  l,
                  [sload,
                    [add,
                      [sha3_32,
                        [sha3_32,
                          [add,
                            [sha3_32, 11 <self.votes>],
                            [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]]],
                      [sload, 21 <self.expected_source_epoch>]]],
                  [with,
                    r,
                    [clamp_nonzero, [sload, 7 <self.total_curdyn_deposits>]],
                    [sdiv, [mul, l, 10000000000], r]]],
                [mload, 128]]],
            # Line 227
            [mstore,
              672 <prev_vote_frac>,
              [clamp,
                [mload, 160],
                [with,
                  l,
                  [sload,
                    [add,
                      [sha3_32,
                        [add,
                          [sha3_32,
                            [add,
                              [sha3_32, 11 <self.votes>],
                              [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                          3 <prev_dyn_votes>]],
                      [sload, 21 <self.expected_source_epoch>]]],
                  [with,
                    r,
                    [clamp_nonzero, [sload, 8 <self.total_prevdyn_deposits>]],
                    [sdiv, [mul, l, 10000000000], r]]],
                [mload, 128]]],
            # Line 228
            [mstore,
              704 <vote_frac>,
              [with,
                _l,
                [mload, 640 <cur_vote_frac>],
                [with, _r, [mload, 672 <prev_vote_frac>], [if, [sgt, _l, _r], _r, _l]]]],
            # Line 229
            [mstore,
              0,
              [clamp,
                [mload, 160],
                [sdiv,
                  [clamp,
                    [mload, 160],
                    [with,
                      r,
                      [sload, 26 <self.reward_factor>],
                      [with,
                        l,
                        [mload, 704 <vote_frac>],
                        [with,
                          ans,
                          [mul, l, r],
                          [seq,
                            [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                            [sdiv, ans, 10000000000]]]]],
                    [mload, 128]],
                  2],
                [mload, 128]]],
            [return, 0, 32],
            # Line 219
            stop]],
        # Line 231
        [if,
          [eq, [mload, 0], 1697049970 <insta_finalize>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            # Line 233
            [mstore, 320 <epoch>, [sload, 18 <self.current_epoch>]],
            # Line 234
            [sstore, 12 <self.main_hash_justified>, 1],
            # Line 235
            [sstore,
              [add,
                [sha3_32,
                  [add,
                    [sha3_32, 11 <self.votes>],
                    [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                2 <is_justified>],
              1],
            # Line 236
            [sstore,
              [add,
                [sha3_32,
                  [add,
                    [sha3_32, 11 <self.votes>],
                    [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                1 <is_finalized>],
              1],
            # Line 237
            [sstore,
              20 <self.last_justified_epoch>,
              [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]],
            # Line 238
            [sstore,
              19 <self.last_finalized_epoch>,
              [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]],
            # Line 231
            stop]],
        # Line 241
        [if,
          [eq, [mload, 0], 2609002115 <get_sqrt_of_total_deposits>],
          [seq,
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            # Line 243
            [mstore, 320 <epoch>, [sload, 18 <self.current_epoch>]],
            # Line 244
            [mstore,
              352 <ether_deposited_as_number>,
              [clamp,
                [mload, 96],
                [add,
                  [sdiv,
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [clamp,
                          [mload, 160],
                          [with,
                            r,
                            [sload,
                              [add,
                                [sha3_32, 13 <self.deposit_scale_factor>],
                                [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                            [with,
                              l,
                              [with,
                                _l,
                                [sload, 8 <self.total_prevdyn_deposits>],
                                [with,
                                  _r,
                                  [sload, 7 <self.total_curdyn_deposits>],
                                  [if, [slt, _l, _r], _r, _l]]],
                              [with,
                                ans,
                                [mul, l, r],
                                [seq,
                                  [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                                  [sdiv, ans, 10000000000]]]]],
                          [mload, 128]],
                        1000000000000000000],
                      [mload, 128]],
                    10000000000],
                  1],
                [mload, 64]]],
            # Line 246
            [mstore,
              384 <sqrt>,
              [clamp,
                [mload, 160],
                [sdiv,
                  [mul, [mload, 352 <ether_deposited_as_number>], 100000000000000000000],
                  20000000000],
                [mload, 128]]],
            # Line 247
            [repeat,
              416,
              0,
              20,
              [seq,
                [mstore,
                  384 <sqrt>,
                  [clamp,
                    [mload, 160],
                    [sdiv,
                      [clamp,
                        [mload, 160],
                        [add,
                          [mload, 384 <sqrt>],
                          [clamp,
                            [mload, 160],
                            [sdiv,
                              [mul, [mload, 352 <ether_deposited_as_number>], 100000000000000000000],
                              [clamp_nonzero, [mload, 384 <sqrt>]]],
                            [mload, 128]]],
                        [mload, 128]],
                      2],
                    [mload, 128]]]]],
            # Line 249
            [mstore, 0, [mload, 384 <sqrt>]],
            [return, 0, 32],
            # Line 241
            stop]],
        # Line 254
        [if,
          [eq, [mload, 0], 1573911575 <initialize_epoch>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 257
            [mstore,
              352 <computed_current_epoch>,
              [clamp,
                [mload, 96],
                [sdiv, number, [clamp_nonzero, [sload, 16 <self.epoch_length>]]],
                [mload, 64]]],
            # Line 258
            [assert,
              [and,
                [sle, [mload, 320 <epoch>], [mload, 352 <computed_current_epoch>]],
                [eq,
                  [mload, 320 <epoch>],
                  [clamp, [mload, 96], [add, [sload, 18 <self.current_epoch>], 1], [mload, 64]]]]],
            # Line 261
            [sstore, 18 <self.current_epoch>, [mload, 320 <epoch>]],
            # Line 264
            [sstore,
              14 <self.last_nonvoter_rescale>,
              [clamp,
                [mload, 160],
                [sub,
                  [clamp,
                    [mload, 160],
                    [add,
                      10000000000,
                      [mload,
                        /* Internal Call: get_collective_reward */
                        [seq,
                          [assert, [call, gas, address, 0, [seq, [mstore, 384, 1890537662], 412], 4, 480, 32]],
                          480]]],
                    [mload, 128]],
                  [sload, 26 <self.reward_factor>]],
                [mload, 128]]],
            # Line 265
            [sstore,
              15 <self.last_voter_rescale>,
              [clamp,
                [mload, 160],
                [with,
                  r,
                  [clamp,
                    [mload, 160],
                    [add, 10000000000, [sload, 26 <self.reward_factor>]],
                    [mload, 128]],
                  [with,
                    l,
                    [sload, 14 <self.last_nonvoter_rescale>],
                    [with,
                      ans,
                      [mul, l, r],
                      [seq,
                        [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                        [sdiv, ans, 10000000000]]]]],
                [mload, 128]]],
            # Line 266
            [sstore,
              [add, [sha3_32, 13 <self.deposit_scale_factor>], [mload, 320 <epoch>]],
              [clamp,
                [mload, 160],
                [with,
                  r,
                  [sload, 14 <self.last_nonvoter_rescale>],
                  [with,
                    l,
                    [sload,
                      [add,
                        [sha3_32, 13 <self.deposit_scale_factor>],
                        [clamp, [mload, 96], [sub, [mload, 320 <epoch>], 1], [mload, 64]]]],
                    [with,
                      ans,
                      [mul, l, r],
                      [seq,
                        [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                        [sdiv, ans, 10000000000]]]]],
                [mload, 128]]],
            # Line 268
            [if,
              [mload,
                /* Internal Call: deposit_exists */
                [seq,
                  [assert, [call, gas, address, 0, [seq, [mstore, 608, 3732904309], 636], 4, 704, 32]],
                  704]],
              # Line 270
              [seq,
                [mstore,
                  864 <adj_interest_base>,
                  [clamp,
                    [mload, 160],
                    [with,
                      l,
                      [sload, 27 <self.base_interest_factor>],
                      [with,
                        r,
                        [clamp_nonzero,
                          [mload,
                            /* Internal Call: get_sqrt_of_total_deposits */
                            [seq,
                              [assert, [call, gas, address, 0, [seq, [mstore, 736, 2609002115], 764], 4, 832, 32]],
                              832]]],
                        [sdiv, [mul, l, 10000000000], r]]],
                    [mload, 128]]],
                # Line 271
                [sstore,
                  26 <self.reward_factor>,
                  [clamp,
                    [mload, 160],
                    [add,
                      [mload, 864 <adj_interest_base>],
                      [clamp,
                        [mload, 160],
                        [with,
                          r,
                          [mload,
                            /* Internal Call: get_esf */
                            [seq,
                              [assert, [call, gas, address, 0, [seq, [mstore, 896, 4200925994], 924], 4, 992, 32]],
                              992]],
                          [with,
                            l,
                            [sload, 28 <self.base_penalty_factor>],
                            [with,
                              ans,
                              [mul, l, r],
                              [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                        [mload, 128]]],
                    [mload, 128]]],
                # Line 273
                [assert, [sgt, [sload, 26 <self.reward_factor>], 0]]],
              # Line 275
              [seq,
                /* Internal Call: insta_finalize */ [assert, [call, gas, address, 0, [seq, [mstore, 512, 1697049970], 540], 4, 0, 0]],
                # Line 276
                [sstore, 26 <self.reward_factor>, 0]]],
            # Line 279
            /* Internal Call: increment_dynasty */ [assert, [call, gas, address, 0, [seq, [mstore, 1024, 3532045186], 1052], 4, 0, 0]],
            # Line 282
            [sstore,
              [add, [sha3_32, 1 <self.checkpoint_hashes>], [mload, 320 <epoch>]],
              [mload,
                /* Internal Call: get_recommended_target_hash */
                [seq,
                  [assert, [call, gas, address, 0, [seq, [mstore, 1120, 3403399105], 1148], 4, 1216, 32]],
                  1216]]],
            # Line 254
            stop]],
        # Line 285
        [if,
          [eq, [mload, 0], 4183858952 <deposit>],
          [seq,
            [calldatacopy, 320, 4, 64],
            /* checking address input */ [uclamplt, [calldataload, 4], [mload, 32]],
            /* checking address input */ [uclamplt, [calldataload, 36], [mload, 32]],
            # Line 288
            [assert,
              [eq,
                [sload, 18 <self.current_epoch>],
                [clamp,
                  [mload, 96],
                  [sdiv, number, [clamp_nonzero, [sload, 16 <self.epoch_length>]]],
                  [mload, 64]]]],
            # Line 289
            [assert,
              [ne,
                /* extracting 32 bytes */
                [with,
                  _sub,
                  [seq,
                    [with,
                      _source,
                      /* concat */
                      [with,
                        _poz,
                        0,
                        [seq,
                          [with,
                            _arg,
                            [seq,
                              [mstore, 384, 4],
                              [mstore,
                                416,
                                73077227117658356969279410473650150870559631135483570926313946830681982107648],
                              384],
                            [seq,
                              /* copy byte slice */
                              [with,
                                _l,
                                4,
                                [pop, [call, 18, 4, 0, [add, _arg, 32], _l, [add, [add, 480, _poz], 32], _l]]],
                              [set, _poz, [add, _poz, [mload, _arg]]]]],
                          [mstore, [add, [add, 480, _poz], 32], [mload, 320 <validation_addr>]],
                          [set, _poz, [add, _poz, 32]],
                          [mstore, 480, _poz],
                          480]],
                      [with,
                        _sz,
                        [add, 32, [mload, _source]],
                        [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 608, _sz]]]],
                    [assert,
                      [call,
                        500000,
                        [sload, 25 <self.purity_checker>],
                        0,
                        640,
                        [mload, 608],
                        768,
                        32]],
                    [mstore, 736, 32],
                    736],
                  [mload,
                    [add,
                      _sub,
                      [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]],
                0]],
            # Line 290
            [assert, [iszero, [sload, [add, [sha3_32, 3 <self.validator_indexes>], [mload, 352 <withdrawal_addr>]]]]],
            # Line 291
            [assert, [sge, callvalue, [sload, 30 <self.min_deposit_size>]]],
            # Line 292
            [with,
              _L,
              [sha3_32, [add, [sha3_32, 0 <self.validators>], [sload, 2 <self.nextValidatorIndex>]]],
              [seq,
                [sstore, _L, [mload, 320 <validation_addr>]],
                [sstore,
                  [add, _L, 1 <deposit>],
                  [clamp,
                    [mload, 160],
                    [sdiv,
                      [mul, callvalue, 100000000000000000000],
                      [clamp_nonzero,
                        [sload,
                          [add,
                            [sha3_32, 13 <self.deposit_scale_factor>],
                            [sload, 18 <self.current_epoch>]]]]],
                    [mload, 128]]],
                [sstore, [add, _L, 2 <end_dynasty>], 1000000000000000000000000000000],
                [sstore,
                  [add, _L, 3 <start_dynasty>],
                  [clamp, [mload, 96], [add, [sload, 4 <self.dynasty>], 2], [mload, 64]]],
                [sstore, [add, _L, 4 <withdrawal_addr>], [mload, 352 <withdrawal_addr>]]]],
            # Line 299
            [sstore,
              [add, [sha3_32, 3 <self.validator_indexes>], [mload, 352 <withdrawal_addr>]],
              [sload, 2 <self.nextValidatorIndex>]],
            # Line 300
            [with,
              _stloc,
              2 <self.nextValidatorIndex>,
              [sstore, _stloc, [clamp, [mload, 96], [add, [sload, _stloc], 1], [mload, 64]]]],
            # Line 301
            [with,
              _stloc,
              6 <self.second_next_dynasty_wei_delta>,
              [sstore,
                _stloc,
                [clamp,
                  [mload, 160],
                  [add,
                    [sload, _stloc],
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [mul, callvalue, 100000000000000000000],
                        [clamp_nonzero,
                          [sload,
                            [add,
                              [sha3_32, 13 <self.deposit_scale_factor>],
                              [sload, 18 <self.current_epoch>]]]]],
                      [mload, 128]]],
                  [mload, 128]]]],
            # Line 285
            stop]],
        # Line 306
        [if,
          [eq, [mload, 0], 1110510642 <logout>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            [calldatacopy, 352, [add, 4, [calldataload, 4]], 1056],
            [assert, [le, [calldataload, [add, 4, [calldataload, 4]]], 1024]],
            # Line 308
            [assert,
              [eq,
                [sload, 18 <self.current_epoch>],
                [clamp,
                  [mload, 96],
                  [sdiv, number, [clamp_nonzero, [sload, 16 <self.epoch_length>]]],
                  [mload, 64]]]],
            # Line 311
            [mstore,
              2624 <sighash>,
              [with,
                _sub,
                [seq,
                  [with,
                    _source,
                    352 <logout_msg>,
                    [with,
                      _sz,
                      [add, 32, [mload, _source]],
                      [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 1440, _sz]]]],
                  [assert, [call, 200000, [sload, 24 <self.sighasher>], 0, 1472, [mload, 1440], 2560, 32]],
                  [mstore, 2528, 32],
                  2528],
                [mload,
                  [add,
                    _sub,
                    [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]]],
            # Line 313
            [with,
              _L,
              4096 <values>,
              [seq,
                [mstore,
                  _L,
                  [seq,
                    [with,
                      _sub,
                      352 <logout_msg>,
                      [pop,
                        [call,
                          2720,
                          611804413765252988754013619680738151377063423597 <RLP decoder>,
                          0,
                          [add, _sub, 32],
                          [mload, _sub],
                          2656,
                          1376]]],
                    [assert, [eq, [mload, 2656], 128]],
                    /* bytearray to number, verify no leading zbytes */
                    [with,
                      _sub,
                      /* getting and checking num */ [add, 2656, [mload, 2656]],
                      [with,
                        _el1,
                        [mload, [add, 32, _sub]],
                        [with,
                          _len,
                          [clamp, 0, [mload, _sub], 32],
                          [seq,
                            [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                            [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]]],
                [mstore,
                  [add, 32, _L],
                  [with,
                    _sub,
                    /* getting and checking num */ [add, 2656, [mload, 2688]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [seq,
                          [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                          [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]],
                [with,
                  _source,
                  /* getting byte array */ [add, 2656, [mload, 2720]],
                  [with,
                    _sz,
                    [add, 32, [mload, _source]],
                    [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, [add, 64, _L], _sz]]]]]],
            # Line 314
            [mstore, 5248 <validator_index>, [mload, 4096 <0+values>]],
            # Line 315
            [mstore, 5280 <epoch>, [mload, 4128 <32+values>]],
            # Line 316
            [with,
              _source,
              4160 <64+values>,
              [with,
                _sz,
                [add, 32, [mload, _source]],
                [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 5312 <sig>, _sz]]]],
            # Line 317
            [assert, [sge, [sload, 18 <self.current_epoch>], [mload, 5280 <epoch>]]],
            # Line 319
            [assert,
              [eq,
                /* extracting 32 bytes */
                [with,
                  _sub,
                  [seq,
                    [with,
                      _source,
                      /* concat */
                      [with,
                        _poz,
                        0,
                        [seq,
                          [mstore, [add, [add, 6400, _poz], 32], [mload, 2624 <sighash>]],
                          [set, _poz, [add, _poz, 32]],
                          [with,
                            _arg,
                            5312 <sig>,
                            [seq,
                              /* copy byte slice */
                              [with,
                                _l,
                                1024,
                                [pop, [call, 120, 4, 0, [add, _arg, 32], _l, [add, [add, 6400, _poz], 32], _l]]],
                              [set, _poz, [add, _poz, [mload, _arg]]]]],
                          [mstore, 6400, _poz],
                          6400]],
                      [with,
                        _sz,
                        [add, 32, [mload, _source]],
                        [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 7520, _sz]]]],
                    [assert,
                      [call,
                        500000,
                        [sload, [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5248 <validator_index>]]]],
                        0,
                        7552,
                        [mload, 7520],
                        8672,
                        32]],
                    [mstore, 8640, 32],
                    8640],
                  [mload,
                    [add,
                      _sub,
                      [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]],
                1]],
            # Line 321
            [assert,
              [sgt,
                [sload,
                  [add,
                    [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5248 <validator_index>]]],
                    2 <end_dynasty>]],
                [clamp, [mload, 96], [add, [sload, 4 <self.dynasty>], 2], [mload, 64]]]],
            # Line 323
            [sstore,
              [add,
                [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5248 <validator_index>]]],
                2 <end_dynasty>],
              [clamp, [mload, 96], [add, [sload, 4 <self.dynasty>], 2], [mload, 64]]],
            # Line 324
            [with,
              _stloc,
              6 <self.second_next_dynasty_wei_delta>,
              [sstore,
                _stloc,
                [clamp,
                  [mload, 160],
                  [sub,
                    [sload, _stloc],
                    [sload,
                      [add,
                        [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5248 <validator_index>]]],
                        1 <deposit>]]],
                  [mload, 128]]]],
            # Line 306
            stop]],
        # Line 327
        [if,
          [eq, [mload, 0], 28815128 <delete_validator>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 329
            [if,
              [sgt,
                [sload,
                  [add,
                    [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                    2 <end_dynasty>]],
                [clamp, [mload, 96], [add, [sload, 4 <self.dynasty>], 2], [mload, 64]]],
              # Line 330
              [seq,
                [with,
                  _stloc,
                  5 <self.next_dynasty_wei_delta>,
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [sub,
                        [sload, _stloc],
                        [sload,
                          [add,
                            [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                            1 <deposit>]]],
                      [mload, 128]]]]]],
            # Line 331
            [sstore,
              [add,
                [sha3_32, 3 <self.validator_indexes>],
                [sload,
                  [add,
                    [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                    4 <withdrawal_addr>]]],
              0],
            # Line 332
            [with,
              _L,
              [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
              [seq,
                [sstore, _L, 0],
                [sstore, [add, _L, 1 <deposit>], 0],
                [sstore, [add, _L, 2 <end_dynasty>], 0],
                [sstore, [add, _L, 3 <start_dynasty>], 0],
                [sstore, [add, _L, 4 <withdrawal_addr>], 0]]],
            # Line 327
            stop]],
        # Line 341
        [if,
          [eq, [mload, 0], 3991540864 <withdraw>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 344
            [assert,
              [sge,
                [sload, 4 <self.dynasty>],
                [clamp,
                  [mload, 96],
                  [add,
                    [sload,
                      [add,
                        [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                        2 <end_dynasty>]],
                    1],
                  [mload, 64]]]],
            # Line 345
            [mstore,
              352 <end_epoch>,
              [sload,
                [add,
                  [sha3_32, 9 <self.dynasty_start_epoch>],
                  [clamp,
                    [mload, 96],
                    [add,
                      [sload,
                        [add,
                          [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                          2 <end_dynasty>]],
                      1],
                    [mload, 64]]]]],
            # Line 346
            [assert,
              [sge,
                [sload, 18 <self.current_epoch>],
                [clamp,
                  [mload, 96],
                  [add, [mload, 352 <end_epoch>], [sload, 17 <self.withdrawal_delay>]],
                  [mload, 64]]]],
            # Line 348
            [mstore,
              384 <withdraw_amount>,
              [sdiv,
                [clamp,
                  [mload, 160],
                  [with,
                    r,
                    [sload, [add, [sha3_32, 13 <self.deposit_scale_factor>], [mload, 352 <end_epoch>]]],
                    [with,
                      l,
                      [sload,
                        [add,
                          [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                          1 <deposit>]],
                      [with,
                        ans,
                        [mul, l, r],
                        [seq,
                          [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                          [sdiv, ans, 10000000000]]]]],
                  [mload, 128]],
                10000000000]],
            # Line 349
            [assert,
              [call,
                0,
                [sload,
                  [add,
                    [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                    4 <withdrawal_addr>]],
                [mload, 384 <withdraw_amount>],
                0,
                0,
                0,
                0]],
            # Line 350
            /* Internal Call: delete_validator */
            [assert,
              [call,
                gas,
                address,
                0,
                [seq,
                  [mstore, 416, 28815128],
                  [mstore, 448, [mload, 320 <validator_index>]],
                  444],
                36,
                0,
                0]],
            # Line 341
            stop]],
        # Line 353
        [if,
          [eq, [mload, 0], 1470052530 <proc_reward>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            [assert, [eq, caller, address]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 36], [mload, 64]],
            # Line 355
            [mstore,
              384 <start_epoch>,
              [sload,
                [add,
                  [sha3_32, 9 <self.dynasty_start_epoch>],
                  [sload,
                    [add,
                      [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                      3 <start_dynasty>]]]]],
            # Line 356
            [with,
              _stloc,
              [add,
                [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                1 <deposit>],
              [sstore,
                _stloc,
                [clamp,
                  [mload, 160],
                  [add, [sload, _stloc], [mul, [mload, 352 <reward>], 10000000000]],
                  [mload, 128]]]],
            # Line 357
            [mstore,
              416 <start_dynasty>,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  3 <start_dynasty>]]],
            # Line 358
            [mstore,
              448 <end_dynasty>,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <validator_index>]]],
                  2 <end_dynasty>]]],
            # Line 359
            [mstore, 480 <current_dynasty>, [sload, 4 <self.dynasty>]],
            # Line 360
            [mstore,
              512 <past_dynasty>,
              [clamp, [mload, 96], [sub, [mload, 480 <current_dynasty>], 1], [mload, 64]]],
            # Line 361
            [if,
              [and,
                [sle, [mload, 416 <start_dynasty>], [mload, 480 <current_dynasty>]],
                [slt, [mload, 480 <current_dynasty>], [mload, 448 <end_dynasty>]]],
              # Line 362
              [seq,
                [with,
                  _stloc,
                  7 <self.total_curdyn_deposits>,
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [add, [sload, _stloc], [mul, [mload, 352 <reward>], 10000000000]],
                      [mload, 128]]]]]],
            # Line 363
            [if,
              [and,
                [sle, [mload, 416 <start_dynasty>], [mload, 512 <past_dynasty>]],
                [slt, [mload, 512 <past_dynasty>], [mload, 448 <end_dynasty>]]],
              # Line 364
              [seq,
                [with,
                  _stloc,
                  8 <self.total_prevdyn_deposits>,
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [add, [sload, _stloc], [mul, [mload, 352 <reward>], 10000000000]],
                      [mload, 128]]]]]],
            # Line 365
            [if,
              [eq,
                [mload, 480 <current_dynasty>],
                [clamp, [mload, 96], [sub, [mload, 448 <end_dynasty>], 1], [mload, 64]]],
              # Line 366
              [seq,
                [with,
                  _stloc,
                  5 <self.next_dynasty_wei_delta>,
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [sub, [sload, _stloc], [mul, [mload, 352 <reward>], 10000000000]],
                      [mload, 128]]]]]],
            # Line 367
            [if,
              [eq,
                [mload, 480 <current_dynasty>],
                [clamp, [mload, 96], [sub, [mload, 448 <end_dynasty>], 2], [mload, 64]]],
              # Line 368
              [seq,
                [with,
                  _stloc,
                  6 <self.second_next_dynasty_wei_delta>,
                  [sstore,
                    _stloc,
                    [clamp,
                      [mload, 160],
                      [sub, [sload, _stloc], [mul, [mload, 352 <reward>], 10000000000]],
                      [mload, 128]]]]]],
            # Line 369
            [assert,
              [call,
                0,
                coinbase,
                [sdiv,
                  [clamp,
                    [mload, 160],
                    [sdiv,
                      [clamp,
                        [mload, 160],
                        [with,
                          r,
                          [sload,
                            [add,
                              [sha3_32, 13 <self.deposit_scale_factor>],
                              [sload, 18 <self.current_epoch>]]],
                          [with,
                            l,
                            [mload, 352 <reward>],
                            [with,
                              ans,
                              [mul, l, r],
                              [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                        [mload, 128]],
                      8],
                    [mload, 128]],
                  10000000000],
                0,
                0,
                0,
                0]],
            # Line 353
            stop]],
        # Line 372
        [if,
          [eq, [mload, 0], 3923510804 <vote>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            [calldatacopy, 352, [add, 4, [calldataload, 4]], 1056],
            [assert, [le, [calldataload, [add, 4, [calldataload, 4]]], 1024]],
            # Line 376
            [mstore,
              2624 <sighash>,
              [with,
                _sub,
                [seq,
                  [with,
                    _source,
                    352 <vote_msg>,
                    [with,
                      _sz,
                      [add, 32, [mload, _source]],
                      [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 1440, _sz]]]],
                  [assert, [call, 200000, [sload, 24 <self.sighasher>], 0, 1472, [mload, 1440], 2560, 32]],
                  [mstore, 2528, 32],
                  2528],
                [mload,
                  [add,
                    _sub,
                    [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]]],
            # Line 378
            [with,
              _L,
              4288 <values>,
              [seq,
                [mstore,
                  _L,
                  [seq,
                    [with,
                      _sub,
                      352 <vote_msg>,
                      [pop,
                        [call,
                          3520,
                          611804413765252988754013619680738151377063423597 <RLP decoder>,
                          0,
                          [add, _sub, 32],
                          [mload, _sub],
                          2656,
                          1568]]],
                    [assert, [eq, [mload, 2656], 192]],
                    /* bytearray to number, verify no leading zbytes */
                    [with,
                      _sub,
                      /* getting and checking num */ [add, 2656, [mload, 2656]],
                      [with,
                        _el1,
                        [mload, [add, 32, _sub]],
                        [with,
                          _len,
                          [clamp, 0, [mload, _sub], 32],
                          [seq,
                            [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                            [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]]],
                [mstore,
                  [add, 32, _L],
                  [seq,
                    [assert, [eq, [mload, [add, 2656, [mload, 2688]]], 32]],
                    [mload, [add, 2688, [mload, 2688]]]]],
                [mstore,
                  [add, 64, _L],
                  [with,
                    _sub,
                    /* getting and checking num */ [add, 2656, [mload, 2720]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [seq,
                          [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                          [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]],
                [mstore,
                  [add, 96, _L],
                  [with,
                    _sub,
                    /* getting and checking num */ [add, 2656, [mload, 2752]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [seq,
                          [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                          [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]],
                [with,
                  _source,
                  /* getting byte array */ [add, 2656, [mload, 2784]],
                  [with,
                    _sz,
                    [add, 32, [mload, _source]],
                    [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, [add, 128, _L], _sz]]]]]],
            # Line 379
            [mstore, 5504 <validator_index>, [mload, 4288 <0+values>]],
            # Line 380
            [mstore, 5536 <target_hash>, [mload, 4320 <32+values>]],
            # Line 381
            [mstore, 5568 <target_epoch>, [mload, 4352 <64+values>]],
            # Line 382
            [mstore, 5600 <source_epoch>, [mload, 4384 <96+values>]],
            # Line 383
            [with,
              _source,
              4416 <128+values>,
              [with,
                _sz,
                [add, 32, [mload, _source]],
                [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 5632 <sig>, _sz]]]],
            # Line 385
            [assert,
              [eq,
                /* extracting 32 bytes */
                [with,
                  _sub,
                  [seq,
                    [with,
                      _source,
                      /* concat */
                      [with,
                        _poz,
                        0,
                        [seq,
                          [mstore, [add, [add, 6720, _poz], 32], [mload, 2624 <sighash>]],
                          [set, _poz, [add, _poz, 32]],
                          [with,
                            _arg,
                            5632 <sig>,
                            [seq,
                              /* copy byte slice */
                              [with,
                                _l,
                                1024,
                                [pop, [call, 120, 4, 0, [add, _arg, 32], _l, [add, [add, 6720, _poz], 32], _l]]],
                              [set, _poz, [add, _poz, [mload, _arg]]]]],
                          [mstore, 6720, _poz],
                          6720]],
                      [with,
                        _sz,
                        [add, 32, [mload, _source]],
                        [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 7840, _sz]]]],
                    [assert,
                      [call,
                        500000,
                        [sload, [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5504 <validator_index>]]]],
                        0,
                        7872,
                        [mload, 7840],
                        8992,
                        32]],
                    [mstore, 8960, 32],
                    8960],
                  [mload,
                    [add,
                      _sub,
                      [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]],
                1]],
            # Line 387
            [assert,
              [iszero,
                [and,
                  [sload,
                    [add,
                      [sha3_32,
                        [add,
                          [sha3_32,
                            [add,
                              [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5568 <target_epoch>]]],
                              4 <vote_bitmap>]],
                          [mload, 5536 <target_hash>]]],
                      [clamp, [mload, 96], [sdiv, [mload, 5504 <validator_index>], 256], [mload, 64]]]],
                  [with,
                    _v,
                    1,
                    [with,
                      _s,
                      [clamp, [mload, 96], [smod, [mload, 5504 <validator_index>], 256], [mload, 64]],
                      [if, [sle, _s, 0], [div, _v, [exp, 2, [sub, 0, _s]]], [mul, _v, [exp, 2, _s]]]]]]]],
            # Line 390
            [assert,
              [eq,
                [mload, 5536 <target_hash>],
                [mload,
                  /* Internal Call: get_recommended_target_hash */
                  [seq,
                    [assert, [call, gas, address, 0, [seq, [mstore, 9056, 3403399105], 9084], 4, 9152, 32]],
                    9152]]]],
            # Line 392
            [assert,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5600 <source_epoch>]]],
                  2 <is_justified>]]],
            # Line 396
            [mstore,
              9184 <start_dynasty>,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5504 <validator_index>]]],
                  3 <start_dynasty>]]],
            # Line 398
            [mstore,
              9216 <end_dynasty>,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5504 <validator_index>]]],
                  2 <end_dynasty>]]],
            # Line 400
            [mstore,
              9248 <current_dynasty>,
              [sload, [add, [sha3_32, 10 <self.dynasty_in_epoch>], [mload, 5568 <target_epoch>]]]],
            # Line 401
            [mstore,
              9280 <past_dynasty>,
              [clamp, [mload, 96], [sub, [mload, 9248 <current_dynasty>], 1], [mload, 64]]],
            # Line 402
            [mstore,
              9312 <in_current_dynasty>,
              [and,
                [sle, [mload, 9184 <start_dynasty>], [mload, 9248 <current_dynasty>]],
                [slt, [mload, 9248 <current_dynasty>], [mload, 9216 <end_dynasty>]]]],
            # Line 403
            [mstore,
              9344 <in_prev_dynasty>,
              [and,
                [sle, [mload, 9184 <start_dynasty>], [mload, 9280 <past_dynasty>]],
                [slt, [mload, 9280 <past_dynasty>], [mload, 9216 <end_dynasty>]]]],
            # Line 404
            [assert, [or, [mload, 9312 <in_current_dynasty>], [mload, 9344 <in_prev_dynasty>]]],
            # Line 406
            [sstore,
              [add,
                [sha3_32,
                  [add,
                    [sha3_32,
                      [add,
                        [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5568 <target_epoch>]]],
                        4 <vote_bitmap>]],
                    [mload, 5536 <target_hash>]]],
                [clamp, [mload, 96], [sdiv, [mload, 5504 <validator_index>], 256], [mload, 64]]],
              [or,
                [sload,
                  [add,
                    [sha3_32,
                      [add,
                        [sha3_32,
                          [add,
                            [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5568 <target_epoch>]]],
                            4 <vote_bitmap>]],
                        [mload, 5536 <target_hash>]]],
                    [clamp, [mload, 96], [sdiv, [mload, 5504 <validator_index>], 256], [mload, 64]]]],
                [with,
                  _v,
                  1,
                  [with,
                    _s,
                    [clamp, [mload, 96], [smod, [mload, 5504 <validator_index>], 256], [mload, 64]],
                    [if, [sle, _s, 0], [div, _v, [exp, 2, [sub, 0, _s]]], [mul, _v, [exp, 2, _s]]]]]]],
            # Line 410
            [mstore,
              9376 <current_dynasty_votes>,
              [sload,
                [add,
                  [sha3_32, [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5568 <target_epoch>]]]],
                  [mload, 5600 <source_epoch>]]]],
            # Line 411
            [mstore,
              9408 <previous_dynasty_votes>,
              [sload,
                [add,
                  [sha3_32,
                    [add,
                      [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5568 <target_epoch>]]],
                      3 <prev_dyn_votes>]],
                  [mload, 5600 <source_epoch>]]]],
            # Line 412
            [if,
              [mload, 9312 <in_current_dynasty>],
              # Line 413
              [seq,
                [with,
                  _mloc,
                  9376 <current_dynasty_votes>,
                  [mstore,
                    _mloc,
                    [clamp,
                      [mload, 160],
                      [add,
                        [mload, _mloc],
                        [sload,
                          [add,
                            [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5504 <validator_index>]]],
                            1 <deposit>]]],
                      [mload, 128]]]],
                # Line 414
                [sstore,
                  [add,
                    [sha3_32, [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5568 <target_epoch>]]]],
                    [mload, 5600 <source_epoch>]],
                  [mload, 9376 <current_dynasty_votes>]]]],
            # Line 415
            [if,
              [mload, 9344 <in_prev_dynasty>],
              # Line 416
              [seq,
                [with,
                  _mloc,
                  9408 <previous_dynasty_votes>,
                  [mstore,
                    _mloc,
                    [clamp,
                      [mload, 160],
                      [add,
                        [mload, _mloc],
                        [sload,
                          [add,
                            [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5504 <validator_index>]]],
                            1 <deposit>]]],
                      [mload, 128]]]],
                # Line 417
                [sstore,
                  [add,
                    [sha3_32,
                      [add,
                        [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5568 <target_epoch>]]],
                        3 <prev_dyn_votes>]],
                    [mload, 5600 <source_epoch>]],
                  [mload, 9408 <previous_dynasty_votes>]]]],
            # Line 421
            [if,
              [and,
                [eq, [sload, 18 <self.current_epoch>], [mload, 5568 <target_epoch>]],
                [eq, [sload, 21 <self.expected_source_epoch>], [mload, 5600 <source_epoch>]]],
              # Line 422
              [seq,
                [mstore,
                  9440 <reward>,
                  [sdiv,
                    [clamp,
                      [mload, 160],
                      [with,
                        r,
                        [sload, 26 <self.reward_factor>],
                        [with,
                          l,
                          [sload,
                            [add,
                              [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 5504 <validator_index>]]],
                              1 <deposit>]],
                          [with,
                            ans,
                            [mul, l, r],
                            [seq,
                              [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]],
                              [sdiv, ans, 10000000000]]]]],
                      [mload, 128]],
                    10000000000]],
                # Line 423
                /* Internal Call: proc_reward */
                [assert,
                  [call,
                    gas,
                    address,
                    0,
                    [seq,
                      [mstore, 9472, 1470052530],
                      [mstore, 9504, [mload, 5504 <validator_index>]],
                      [mstore, 9536, [mload, 9440 <reward>]],
                      9500],
                    68,
                    0,
                    0]]]],
            # Line 426
            [if,
              [and,
                [and,
                  [sge,
                    [mload, 9376 <current_dynasty_votes>],
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [clamp,
                          [mload, 160],
                          [with,
                            r,
                            2,
                            [with,
                              l,
                              [sload, 7 <self.total_curdyn_deposits>],
                              [with,
                                ans,
                                [mul, l, r],
                                [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                          [mload, 128]],
                        3],
                      [mload, 128]]],
                  [sge,
                    [mload, 9408 <previous_dynasty_votes>],
                    [clamp,
                      [mload, 160],
                      [sdiv,
                        [clamp,
                          [mload, 160],
                          [with,
                            r,
                            2,
                            [with,
                              l,
                              [sload, 8 <self.total_prevdyn_deposits>],
                              [with,
                                ans,
                                [mul, l, r],
                                [seq, [assert, [or, [eq, [sdiv, ans, l], r], [not, l]]], ans]]]],
                          [mload, 128]],
                        3],
                      [mload, 128]]]],
                [iszero,
                  [sload,
                    [add,
                      [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5568 <target_epoch>]]],
                      2 <is_justified>]]]],
              # Line 429
              [seq,
                [sstore,
                  [add,
                    [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5568 <target_epoch>]]],
                    2 <is_justified>],
                  1],
                # Line 430
                [sstore, 20 <self.last_justified_epoch>, [mload, 5568 <target_epoch>]],
                # Line 431
                [if,
                  [eq, [mload, 5568 <target_epoch>], [sload, 18 <self.current_epoch>]],
                  # Line 432
                  [seq, [sstore, 12 <self.main_hash_justified>, 1]]],
                # Line 435
                [if,
                  [eq,
                    [mload, 5568 <target_epoch>],
                    [clamp, [mload, 96], [add, [mload, 5600 <source_epoch>], 1], [mload, 64]]],
                  # Line 436
                  [seq,
                    [sstore,
                      [add,
                        [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 5600 <source_epoch>]]],
                        1 <is_finalized>],
                      1],
                    # Line 437
                    [sstore, 19 <self.last_finalized_epoch>, [mload, 5600 <source_epoch>]]]]]],
            # Line 438
            [with,
              _arr,
              352 <vote_msg>,
              [log1, [add, _arr, 32], [mload, _arr], [sload, 29 <self.vote_log_topic>]]],
            # Line 372
            stop]],
        # Line 441
        [if,
          [eq, [mload, 0], 3424711019 <slash>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            [calldatacopy, 384, [add, 4, [calldataload, 4]], 1056],
            [assert, [le, [calldataload, [add, 4, [calldataload, 4]]], 1024]],
            [calldatacopy, 1472, [add, 4, [calldataload, 36]], 1056],
            [assert, [le, [calldataload, [add, 4, [calldataload, 36]]], 1024]],
            # Line 444
            [mstore,
              3744 <sighash_1>,
              [with,
                _sub,
                [seq,
                  [with,
                    _source,
                    384 <vote_msg_1>,
                    [with,
                      _sz,
                      [add, 32, [mload, _source]],
                      [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 2560, _sz]]]],
                  [assert, [call, 200000, [sload, 24 <self.sighasher>], 0, 2592, [mload, 2560], 3680, 32]],
                  [mstore, 3648, 32],
                  3648],
                [mload,
                  [add,
                    _sub,
                    [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]]],
            # Line 445
            [with,
              _L,
              5408 <values>,
              [seq,
                [mstore,
                  _L,
                  [seq,
                    [with,
                      _sub,
                      384 <vote_msg_1>,
                      [pop,
                        [call,
                          3520,
                          611804413765252988754013619680738151377063423597 <RLP decoder>,
                          0,
                          [add, _sub, 32],
                          [mload, _sub],
                          3776,
                          1568]]],
                    [assert, [eq, [mload, 3776], 192]],
                    /* bytearray to number, verify no leading zbytes */
                    [with,
                      _sub,
                      /* getting and checking num */ [add, 3776, [mload, 3776]],
                      [with,
                        _el1,
                        [mload, [add, 32, _sub]],
                        [with,
                          _len,
                          [clamp, 0, [mload, _sub], 32],
                          [seq,
                            [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                            [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]]],
                [mstore,
                  [add, 32, _L],
                  [seq,
                    [assert, [eq, [mload, [add, 3776, [mload, 3808]]], 32]],
                    [mload, [add, 3808, [mload, 3808]]]]],
                [mstore,
                  [add, 64, _L],
                  [with,
                    _sub,
                    /* getting and checking num */ [add, 3776, [mload, 3840]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [seq,
                          [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                          [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]],
                [mstore,
                  [add, 96, _L],
                  [with,
                    _sub,
                    /* getting and checking num */ [add, 3776, [mload, 3872]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [seq,
                          [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                          [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]],
                [with,
                  _source,
                  /* getting byte array */ [add, 3776, [mload, 3904]],
                  [with,
                    _sz,
                    [add, 32, [mload, _source]],
                    [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, [add, 128, _L], _sz]]]]]],
            # Line 446
            [mstore, 6624 <validator_index_1>, [mload, 5408 <0+values>]],
            # Line 447
            [mstore, 6656 <target_epoch_1>, [mload, 5472 <64+values>]],
            # Line 448
            [mstore, 6688 <source_epoch_1>, [mload, 5504 <96+values>]],
            # Line 449
            [with,
              _source,
              5536 <128+values>,
              [with,
                _sz,
                [add, 32, [mload, _source]],
                [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 6720 <sig_1>, _sz]]]],
            # Line 451
            [assert,
              [eq,
                /* extracting 32 bytes */
                [with,
                  _sub,
                  [seq,
                    [with,
                      _source,
                      /* concat */
                      [with,
                        _poz,
                        0,
                        [seq,
                          [mstore, [add, [add, 7808, _poz], 32], [mload, 3744 <sighash_1>]],
                          [set, _poz, [add, _poz, 32]],
                          [with,
                            _arg,
                            6720 <sig_1>,
                            [seq,
                              /* copy byte slice */
                              [with,
                                _l,
                                1024,
                                [pop, [call, 120, 4, 0, [add, _arg, 32], _l, [add, [add, 7808, _poz], 32], _l]]],
                              [set, _poz, [add, _poz, [mload, _arg]]]]],
                          [mstore, 7808, _poz],
                          7808]],
                      [with,
                        _sz,
                        [add, 32, [mload, _source]],
                        [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 8928, _sz]]]],
                    [assert,
                      [call,
                        500000,
                        [sload, [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 6624 <validator_index_1>]]]],
                        0,
                        8960,
                        [mload, 8928],
                        10080,
                        32]],
                    [mstore, 10048, 32],
                    10048],
                  [mload,
                    [add,
                      _sub,
                      [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]],
                1]],
            # Line 453
            [mstore,
              11328 <sighash_2>,
              [with,
                _sub,
                [seq,
                  [with,
                    _source,
                    1472 <vote_msg_2>,
                    [with,
                      _sz,
                      [add, 32, [mload, _source]],
                      [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 10144, _sz]]]],
                  [assert,
                    [call,
                      200000,
                      [sload, 24 <self.sighasher>],
                      0,
                      10176,
                      [mload, 10144],
                      11264,
                      32]],
                  [mstore, 11232, 32],
                  11232],
                [mload,
                  [add,
                    _sub,
                    [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]]],
            # Line 454
            [with,
              _L,
              5408 <values>,
              [seq,
                [mstore,
                  _L,
                  [seq,
                    [with,
                      _sub,
                      1472 <vote_msg_2>,
                      [pop,
                        [call,
                          3520,
                          611804413765252988754013619680738151377063423597 <RLP decoder>,
                          0,
                          [add, _sub, 32],
                          [mload, _sub],
                          11360,
                          1568]]],
                    [assert, [eq, [mload, 11360], 192]],
                    /* bytearray to number, verify no leading zbytes */
                    [with,
                      _sub,
                      /* getting and checking num */ [add, 11360, [mload, 11360]],
                      [with,
                        _el1,
                        [mload, [add, 32, _sub]],
                        [with,
                          _len,
                          [clamp, 0, [mload, _sub], 32],
                          [seq,
                            [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                            [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]]],
                [mstore,
                  [add, 32, _L],
                  [seq,
                    [assert, [eq, [mload, [add, 11360, [mload, 11392]]], 32]],
                    [mload, [add, 11392, [mload, 11392]]]]],
                [mstore,
                  [add, 64, _L],
                  [with,
                    _sub,
                    /* getting and checking num */ [add, 11360, [mload, 11424]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [seq,
                          [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                          [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]],
                [mstore,
                  [add, 96, _L],
                  [with,
                    _sub,
                    /* getting and checking num */ [add, 11360, [mload, 11456]],
                    [with,
                      _el1,
                      [mload, [add, 32, _sub]],
                      [with,
                        _len,
                        [clamp, 0, [mload, _sub], 32],
                        [seq,
                          [assert, [or, [iszero, _len], [div, _el1, [exp, 256, 31]]]],
                          [clamp, [mload, 96], [div, _el1, [exp, 256, [sub, 32, _len]]], [mload, 64]]]]]]],
                [with,
                  _source,
                  /* getting byte array */ [add, 11360, [mload, 11488]],
                  [with,
                    _sz,
                    [add, 32, [mload, _source]],
                    [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, [add, 128, _L], _sz]]]]]],
            # Line 455
            [mstore, 12992 <validator_index_2>, [mload, 5408 <0+values>]],
            # Line 456
            [mstore, 13024 <target_epoch_2>, [mload, 5472 <64+values>]],
            # Line 457
            [mstore, 13056 <source_epoch_2>, [mload, 5504 <96+values>]],
            # Line 458
            [with,
              _source,
              5536 <128+values>,
              [with,
                _sz,
                [add, 32, [mload, _source]],
                [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 13088 <sig_2>, _sz]]]],
            # Line 460
            [assert,
              [eq,
                /* extracting 32 bytes */
                [with,
                  _sub,
                  [seq,
                    [with,
                      _source,
                      /* concat */
                      [with,
                        _poz,
                        0,
                        [seq,
                          [mstore, [add, [add, 14176, _poz], 32], [mload, 11328 <sighash_2>]],
                          [set, _poz, [add, _poz, 32]],
                          [with,
                            _arg,
                            13088 <sig_2>,
                            [seq,
                              /* copy byte slice */
                              [with,
                                _l,
                                1024,
                                [pop, [call, 120, 4, 0, [add, _arg, 32], _l, [add, [add, 14176, _poz], 32], _l]]],
                              [set, _poz, [add, _poz, [mload, _arg]]]]],
                          [mstore, 14176, _poz],
                          14176]],
                      [with,
                        _sz,
                        [add, 32, [mload, _source]],
                        [assert, [call, [add, 18, [div, _sz, 10]], 4, 0, _source, _sz, 15296, _sz]]]],
                    [assert,
                      [call,
                        500000,
                        [sload, [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 12992 <validator_index_2>]]]],
                        0,
                        15328,
                        [mload, 15296],
                        16448,
                        32]],
                    [mstore, 16416, 32],
                    16416],
                  [mload,
                    [add,
                      _sub,
                      [add, 32, [mul, 32, [div, [clample, 0, [sub, [mload, _sub], 32]], 32]]]]]],
                1]],
            # Line 462
            [assert, [eq, [mload, 6624 <validator_index_1>], [mload, 12992 <validator_index_2>]]],
            # Line 464
            [assert, [ne, [mload, 3744 <sighash_1>], [mload, 11328 <sighash_2>]]],
            # Line 466
            [mstore, 16512 <slashing_condition_detected>, 0],
            # Line 467
            [if,
              [eq, [mload, 6656 <target_epoch_1>], [mload, 13024 <target_epoch_2>]],
              # Line 469
              [seq, [mstore, 16512 <slashing_condition_detected>, 1]],
              # Line 470
              [seq,
                [if,
                  [or,
                    [and,
                      [sgt, [mload, 6656 <target_epoch_1>], [mload, 13024 <target_epoch_2>]],
                      [slt, [mload, 6688 <source_epoch_1>], [mload, 13056 <source_epoch_2>]]],
                    [and,
                      [sgt, [mload, 13024 <target_epoch_2>], [mload, 6656 <target_epoch_1>]],
                      [slt, [mload, 13056 <source_epoch_2>], [mload, 6688 <source_epoch_1>]]]],
                  # Line 473
                  [seq, [mstore, 16512 <slashing_condition_detected>, 1]]]]],
            # Line 474
            [assert, [mload, 16512 <slashing_condition_detected>]],
            # Line 476
            [mstore,
              16704 <validator_deposit>,
              [mload,
                /* Internal Call: get_deposit_size */
                [seq,
                  [assert,
                    [call,
                      gas,
                      address,
                      0,
                      [seq,
                        [mstore, 16544, 2218461328],
                        [mstore, 16576, [mload, 6624 <validator_index_1>]],
                        16572],
                      36,
                      16672,
                      32]],
                  16672]]],
            # Line 477
            [mstore,
              16736 <slashing_bounty>,
              [clamp,
                [mload, 96],
                [sdiv, [mload, 16704 <validator_deposit>], 25],
                [mload, 64]]],
            # Line 478
            [with,
              _stloc,
              23 <self.total_destroyed>,
              [sstore,
                _stloc,
                [clamp,
                  [mload, 96],
                  [add,
                    [sload, _stloc],
                    [clamp,
                      [mload, 96],
                      [sdiv,
                        [clamp,
                          [mload, 96],
                          [mul, [mload, 16704 <validator_deposit>], 24],
                          [mload, 64]],
                        25],
                      [mload, 64]]],
                  [mload, 64]]]],
            # Line 479
            /* Internal Call: delete_validator */
            [assert,
              [call,
                gas,
                address,
                0,
                [seq,
                  [mstore, 16768, 28815128],
                  [mstore, 16800, [mload, 6624 <validator_index_1>]],
                  16796],
                36,
                0,
                0]],
            # Line 480
            [assert, [call, 0, caller, [mload, 16736 <slashing_bounty>], 0, 0, 0, 0]],
            # Line 441
            stop]],
        # Line 483
        [if,
          [eq, [mload, 0], 888093169 <owner_withdraw>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 485
            [assert,
              [call,
                0,
                [sload, 22 <self.owner>],
                [sload, 23 <self.total_destroyed>],
                0,
                0,
                0,
                0]],
            # Line 486
            [sstore, 23 <self.total_destroyed>, 0],
            # Line 483
            stop]],
        # Line 489
        [if,
          [eq, [mload, 0], 624724948 <change_owner>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking address input */ [uclamplt, [calldataload, 4], [mload, 32]],
            # Line 491
            [if,
              [eq, [sload, 22 <self.owner>], caller],
              # Line 492
              [seq, [sstore, 22 <self.owner>, [mload, 320 <new_owner>]]]],
            # Line 489
            stop]],
        # Line 2
        [if,
          [eq, [mload, 0], 3818249317 <get_validators__deposit>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 4
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]],
                  1 <deposit>]]],
            [return, 0, 32],
            # Line 2
            stop]],
        [if,
          [eq, [mload, 0], 313697546 <get_validators__start_dynasty>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 4
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]],
                  3 <start_dynasty>]]],
            [return, 0, 32],
            # Line 2
            stop]],
        [if,
          [eq, [mload, 0], 4230825280 <get_validators__end_dynasty>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 4
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]],
                  2 <end_dynasty>]]],
            [return, 0, 32],
            # Line 2
            stop]],
        [if,
          [eq, [mload, 0], 1392660623 <get_validators__addr>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 4
            [mstore,
              0,
              [sload, [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]]]],
            [return, 0, 32],
            # Line 2
            stop]],
        [if,
          [eq, [mload, 0], 1979831651 <get_validators__withdrawal_addr>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 4
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 0 <self.validators>], [mload, 320 <arg0>]]],
                  4 <withdrawal_addr>]]],
            [return, 0, 32],
            # Line 2
            stop]],
        # Line 17
        [if,
          [eq, [mload, 0], 2596075164 <get_checkpoint_hashes>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 19
            [mstore,
              0,
              [sload, [add, [sha3_32, 1 <self.checkpoint_hashes>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 17
            stop]],
        # Line 20
        [if,
          [eq, [mload, 0], 909269125 <get_nextValidatorIndex>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 22
            [mstore, 0, [sload, 2 <self.nextValidatorIndex>]],
            [return, 0, 32],
            # Line 20
            stop]],
        # Line 23
        [if,
          [eq, [mload, 0], 3832343648 <get_validator_indexes>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking address input */ [uclamplt, [calldataload, 4], [mload, 32]],
            # Line 25
            [mstore,
              0,
              [sload, [add, [sha3_32, 3 <self.validator_indexes>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 23
            stop]],
        # Line 26
        [if,
          [eq, [mload, 0], 2696054486 <get_dynasty>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 28
            [mstore, 0, [sload, 4 <self.dynasty>]],
            [return, 0, 32],
            # Line 26
            stop]],
        # Line 29
        [if,
          [eq, [mload, 0], 746478242 <get_next_dynasty_wei_delta>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 31
            [mstore, 0, [sload, 5 <self.next_dynasty_wei_delta>]],
            [return, 0, 32],
            # Line 29
            stop]],
        # Line 32
        [if,
          [eq, [mload, 0], 2784834837 <get_second_next_dynasty_wei_delta>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 34
            [mstore, 0, [sload, 6 <self.second_next_dynasty_wei_delta>]],
            [return, 0, 32],
            # Line 32
            stop]],
        # Line 41
        [if,
          [eq, [mload, 0], 12354271 <get_dynasty_start_epoch>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 43
            [mstore,
              0,
              [sload, [add, [sha3_32, 9 <self.dynasty_start_epoch>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 41
            stop]],
        # Line 44
        [if,
          [eq, [mload, 0], 1394664890 <get_dynasty_in_epoch>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 46
            [mstore,
              0,
              [sload, [add, [sha3_32, 10 <self.dynasty_in_epoch>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 44
            stop]],
        # Line 47
        [if,
          [eq, [mload, 0], 4131989443 <get_votes__cur_dyn_votes>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 36], [mload, 64]],
            # Line 49
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 320 <arg0>]]]],
                  [mload, 352 <arg1>]]]],
            [return, 0, 32],
            # Line 47
            stop]],
        [if,
          [eq, [mload, 0], 1223172521 <get_votes__prev_dyn_votes>],
          [seq,
            [calldatacopy, 320, 4, 64],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 36], [mload, 64]],
            # Line 49
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32,
                    [add,
                      [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 320 <arg0>]]],
                      3 <prev_dyn_votes>]],
                  [mload, 352 <arg1>]]]],
            [return, 0, 32],
            # Line 47
            stop]],
        [if,
          [eq, [mload, 0], 1454924193 <get_votes__vote_bitmap>],
          [seq,
            [calldatacopy, 320, 4, 96],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 68], [mload, 64]],
            # Line 49
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32,
                    [add,
                      [sha3_32,
                        [add,
                          [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 320 <arg0>]]],
                          4 <vote_bitmap>]],
                      [mload, 352 <arg1>]]],
                  [mload, 384 <arg2>]]]],
            [return, 0, 32],
            # Line 47
            stop]],
        [if,
          [eq, [mload, 0], 1720538877 <get_votes__is_justified>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 49
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 320 <arg0>]]],
                  2 <is_justified>]]],
            [return, 0, 32],
            # Line 47
            stop]],
        [if,
          [eq, [mload, 0], 1650407259 <get_votes__is_finalized>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 49
            [mstore,
              0,
              [sload,
                [add,
                  [sha3_32, [add, [sha3_32, 11 <self.votes>], [mload, 320 <arg0>]]],
                  1 <is_finalized>]]],
            [return, 0, 32],
            # Line 47
            stop]],
        # Line 61
        [if,
          [eq, [mload, 0], 1066978799 <get_main_hash_justified>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 63
            [mstore, 0, [sload, 12 <self.main_hash_justified>]],
            [return, 0, 32],
            # Line 61
            stop]],
        # Line 64
        [if,
          [eq, [mload, 0], 2719561995 <get_deposit_scale_factor>],
          [seq,
            [calldatacopy, 320, 4, 32],
            [assert, [iszero, callvalue]],
            /* checking num input */ [clamp, [mload, 96], [calldataload, 4], [mload, 64]],
            # Line 66
            [mstore,
              0,
              [sload, [add, [sha3_32, 13 <self.deposit_scale_factor>], [mload, 320 <arg0>]]]],
            [return, 0, 32],
            # Line 64
            stop]],
        # Line 68
        [if,
          [eq, [mload, 0], 4015133405 <get_last_nonvoter_rescale>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 70
            [mstore, 0, [sload, 14 <self.last_nonvoter_rescale>]],
            [return, 0, 32],
            # Line 68
            stop]],
        # Line 69
        [if,
          [eq, [mload, 0], 1784543732 <get_last_voter_rescale>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 71
            [mstore, 0, [sload, 15 <self.last_voter_rescale>]],
            [return, 0, 32],
            # Line 69
            stop]],
        # Line 72
        [if,
          [eq, [mload, 0], 100339843 <get_epoch_length>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 74
            [mstore, 0, [sload, 16 <self.epoch_length>]],
            [return, 0, 32],
            # Line 72
            stop]],
        # Line 75
        [if,
          [eq, [mload, 0], 3280103687 <get_withdrawal_delay>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 77
            [mstore, 0, [sload, 17 <self.withdrawal_delay>]],
            [return, 0, 32],
            # Line 75
            stop]],
        # Line 78
        [if,
          [eq, [mload, 0], 2205850567 <get_current_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 80
            [mstore, 0, [sload, 18 <self.current_epoch>]],
            [return, 0, 32],
            # Line 78
            stop]],
        # Line 81
        [if,
          [eq, [mload, 0], 1665994615 <get_last_finalized_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 83
            [mstore, 0, [sload, 19 <self.last_finalized_epoch>]],
            [return, 0, 32],
            # Line 81
            stop]],
        # Line 84
        [if,
          [eq, [mload, 0], 2205217592 <get_last_justified_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 86
            [mstore, 0, [sload, 20 <self.last_justified_epoch>]],
            [return, 0, 32],
            # Line 84
            stop]],
        # Line 87
        [if,
          [eq, [mload, 0], 4290208155 <get_expected_source_epoch>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 89
            [mstore, 0, [sload, 21 <self.expected_source_epoch>]],
            [return, 0, 32],
            # Line 87
            stop]],
        # Line 102
        [if,
          [eq, [mload, 0], 890060718 <get_reward_factor>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 104
            [mstore, 0, [sload, 26 <self.reward_factor>]],
            [return, 0, 32],
            # Line 102
            stop]],
        # Line 105
        [if,
          [eq, [mload, 0], 4221743539 <get_base_interest_factor>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 107
            [mstore, 0, [sload, 27 <self.base_interest_factor>]],
            [return, 0, 32],
            # Line 105
            stop]],
        # Line 108
        [if,
          [eq, [mload, 0], 429784826 <get_base_penalty_factor>],
          [seq,
            [assert, [iszero, callvalue]],
            # Line 110
            [mstore, 0, [sload, 28 <self.base_penalty_factor>]],
            [return, 0, 32],
            # Line 108
            stop]]],
      0]]]